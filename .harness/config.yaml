pipeline:
    name: config
    identifier: config
    allowStageExecutions: false
    projectIdentifier: PHP2
    orgIdentifier: default
    tags:
        laravel: ""
        php: ""
    properties:
        ci:
            codebase:
                connectorRef: org.Github
                repoName: harness-demo-php-laravel
                build: <+input>
    stages:
        - stage:
              name: Build and Test
              identifier: Build_and_Test
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: org.GKE
                          namespace: harness-builds
                          automountServiceAccountToken: false
                  serviceDependencies:
                      - identifier: MySQL
                        name: MySQL
                        type: Service
                        spec:
                            connectorRef: org.Dockerhub
                            image: mysql:8.0.20
                            envVariables:
                                MYSQL_USER: forge
                                MYSQL_DATABASE: forge
                                MYSQL_ROOT_PASSWORD: "''"
                                MYSQL_PASSWORD: forge
                            args:
                                - mysqld
                                - --default-authentication-plugin=mysql_native_password
                  execution:
                      steps:
                          - parallel:
                                - step:
                                      type: Run
                                      name: Prepare DB
                                      identifier: Install_MySQL_driver
                                      spec:
                                          connectorRef: org.Dockerhub
                                          image: <+Build_and_Test.variables.PHP_IMAGE>
                                          shell: Bash
                                          command: |-
                                              sudo docker-php-ext-configure pdo_mysql --with-pdo-mysql=mysqlnd
                                              sudo docker-php-ext-install zip bcmath pdo_mysql
                                          privileged: true
                                - step:
                                      type: Run
                                      name: Install Node
                                      identifier: Install_Node
                                      spec:
                                          connectorRef: org.Dockerhub
                                          image: <+Build_and_Test.variables.PHP_IMAGE>
                                          shell: Bash
                                          command: |-
                                              curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
                                              sudo apt-get install -y nodejs
                          - step:
                                type: Run
                                name: Prepare DB
                                identifier: Prepare_DB
                                spec:
                                    connectorRef: org.Dockerhub
                                    image: <+Build_and_Test.variables.PHP_IMAGE>
                                    shell: Sh
                                    command: |-
                                        sudo touch storage/testing.sqlite
                                        sudo ls -larth
                                        sudo composer install
                                        sudo php artisan migrate --env=testing --database=mysql --force
                                    privileged: false
                                    envVariables:
                                        LD_LIBRARY_PATH: /usr/src/php/ext/pdo_mysql/modules
                          - step:
                                type: Run
                                name: Run Tests
                                identifier: Run_Tests
                                spec:
                                    connectorRef: org.Dockerhub
                                    image: <+Build_and_Test.variables.PHP_IMAGE>
                                    shell: Bash
                                    command: |-
                                        ./vendor/bin/codecept build
                                        ./vendor/bin/codecept run --xml result.xml
                                    reports:
                                        type: JUnit
                                        spec:
                                            paths:
                                                - result.xml
                  sharedPaths:
                      - " /usr/src/php/"
                      - ../harness
              variables:
                  - name: PHP_IMAGE
                    type: String
                    value: circleci/php:7.2-stretch
